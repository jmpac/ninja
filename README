Ninja, inelegantly modified to conform to a particular workflow on a
particular project. It adds:

--shallow command line option: executes only the top-most
rule named "link" or "solink". Any inputs to that rule that require 
a link to rebuild are treated as though they're already up-to-date.
Useful when you want to defer building inputs until later, or
not at all.

--missing-obj-ok command line option: don't build an object
file just because it doesn't exist. Useful when you get a project
with pre-built libs and you just want to build part of it.

-V multiline: don't erase old input lines.

*target syntax for specifying targets, which selects all targets that
are inputs to the default target and contain the substring "target".

Original README follows.

Ninja is a small build system with a focus on speed.
https://ninja-build.org/

See the manual -- https://ninja-build.org/manual.html or
doc/manual.asciidoc included in the distribution -- for background
and more details.

Binaries for Linux, Mac, and Windows are available at
  https://github.com/ninja-build/ninja/releases
Run './ninja -h' for Ninja help.

To build your own binary, on many platforms it should be sufficient to
just run `./configure.py --bootstrap`; for more details see HACKING.md.
(Also read that before making changes to Ninja, as it has advice.)

Installation is not necessary because the only required file is the
resulting ninja binary. However, to enable features like Bash
completion and Emacs and Vim editing modes, some files in misc/ must be
copied to appropriate locations.

If you're interested in making changes to Ninja, read HACKING.md first.
